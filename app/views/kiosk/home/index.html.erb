<!DOCTYPE html>
<html>
<head>
  <title>Group Signup Kiosk</title>
  <%# <%= stylesheet_link_tag 'kiosk' %>
  <%# <%= javascript_pack_tag 'kiosk' %>
</head>
<body>
  <div>
    <h1> Group Signup Kiosk Page </h1>
    <label for="group-select">Select Group:</label>
    <select id="group-select">
      <option>Loading Groups...</option>
    </select>

    <br><br>
    <table id="members-table" border="1">
      <thead>
        <tr>
          <th>Name</th>
          <!-- Add other columns if needed -->
        </tr>
      </thead>
      <tbody>
        <tr><td>Select a group to see members.</td></tr>
      </tbody>
    </table>

    <label for="people-select">Select Person:</label>
    <select id="people-select">
      <option>Loading people...</option>
    </select>
  
  </div>
  <script>
    let groups = [];
    let groupMembers = [];
    let people = [];

    document.addEventListener("DOMContentLoaded",() => {
      fetch("/pco/groups")
        .then(response => response.json())
        .then(json => {
          groups = json.data;
          const groupSelect = document.getElementById("group-select");
          groupSelect.innerHTML = "";

          groups.forEach(group => {
            const name = group.attributes?.name || "{no name}";
            const option = document.createElement("option");
            option.value = group.id;
            option.textContent = name;
            groupSelect.appendChild(option);
          });

          document.getElementById("group-select").addEventListener("change", (e) => {
            const groupId = e.target.value;

            if (!groupId) return;

            fetch(`/pco/groupmembers?groupid=${groupId}`)
              .then(response => response.json())
              .then(json => {
                const members = json.data;
                const tableBody = document.querySelector("#members-table tbody");

                if (!members.length) {
                  tableBody.innerHTML = "<tr><td>No members in this group.</td></tr>";
                  return;
                }

                tableBody.innerHTML = members.map(member => {
                  const p = member.relationships.person.data.id || "(no name)";
                  if (p != "(no name)"){
                    fetch(`/pco/person?personid=${p}`)
                      .then(response => response.json())
                      .then(json => {
                        const name = json.data[0].attributes?.name || "(No Name)";

                        const row = document.createElement("tr");
                        row.innerHTML = `<td>${name}</td>`;
                        tableBody.appendChild(row);
                      })
                      .catch(err => {
                        console.error(`Failed to fetch person ${personId}:`, err);
                        const row = document.createElement("tr");
                        row.innerHTML = `<td>(failed to load person ${personId})</td>`;
                        tableBody.appendChild(row);
                      });
                  }
                  return ``;
                }).join("");
              })
              .catch(err => {
                console.error("Failed to load group members:", err);
                document.querySelector("#members-table tbody").innerHTML =
                  "<tr><td>Failed to load members.</td></tr>";
              });
          });
        })
        .catch(err => {
          console.error("Failed to load groups: ", err);
          document.getElementById("group-select").innerHTML = "<option>Failed to load groups</option>";
        });
      
      fetch("/pco/people")
        .then(response => response.json())
        .then(json => {
          people = json.data;
          const peopleSelect = document.getElementById("people-select");
          peopleSelect.innerHTML = ""; // Clear existing options

          people.forEach(person => {
            const name = person.attributes?.name || "(no name)";
            const option = document.createElement("option");
            option.value = person.id;
            option.textContent = name;
            peopleSelect.appendChild(option);
          });
        })
        .catch(err => {
          console.error("Failed to load people:",err);
          document.getElementById("people-container").innerText = "Failed to load people.";
        });
    });
  </script>
</body>
</html>